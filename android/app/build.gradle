plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.bullion.app"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.bullion.app"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    flavorDimensions "flavor-type"

    productFlavors {
        create("dev") {
            dimension = "flavor-type"
            applicationIdSuffix = ".dev"
            versionNameSuffix = "-dev"
            manifestPlaceholders["appName"] = "Bullion Dev"
            manifestPlaceholders["deepLinkHost"] = "testsite.bullion.com"
            manifestPlaceholders["deepFBLinkHost"] = "bulliondev.page.link"
        }
        create("prod") {
            dimension = "flavor-type"
            manifestPlaceholders["appName"] = "Bullion"
            manifestPlaceholders["deepLinkHost"] = "bullion.com"
            manifestPlaceholders["deepFBLinkHost"] = "bullion.page.link"
        }
    }

    buildTypes {
        release {
            //Hack for releasing through App Center https://github.com/flutter/flutter/issues/18232
            signingConfig null
            crunchPngs false
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    if (variant.buildType.name == "release") {
                        output.outputFileName = "app-${variant.baseName}.apk"
                    }
                }
            }
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
}
